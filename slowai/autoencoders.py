# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/07_autoencoders.ipynb.

# %% auto 0
__all__ = ['Loss', 'deconv']

# %% ../nbs/07_autoencoders.ipynb 2
from copy import copy
from typing import Mapping

import fastcore.all as fc
import matplotlib.pyplot as plt
import numpy as np
import torch
import torch.nn.functional as F
import torchvision.transforms.functional as T
from datasets import load_dataset
from torch import nn, optim, tensor
from torch.utils.data import DataLoader, default_collate
from torcheval.metrics import Mean

from .convs import conv, def_device, fashion_mnist, to_device
from .datasets import show_image, show_images

# %% ../nbs/07_autoencoders.ipynb 4
def deconv(c_in, c_out, ks=3, act=True):
    layers = [
        nn.UpsamplingNearest2d(scale_factor=2),
        nn.Conv2d(c_in, c_out, stride=1, kernel_size=ks, padding=ks // 2),
    ]
    if act:
        layers.append(nn.ReLU())
    return nn.Sequential(*layers)

# %% ../nbs/07_autoencoders.ipynb 18
Loss = Metric  # Loss is just the average of the inputs
