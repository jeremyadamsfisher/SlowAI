# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/16_cosine.ipynb.

# %% auto 0
__all__ = ['DDPM']

# %% ../nbs/16_cosine.ipynb 10
class DDPM(Callback, order=after(DeviceCB)):
    def __init__(self, n_steps=1000, βmin=0.0001, βmax=0.02):
        self.n_steps = n_steps
        self.βmin = βmin
        self.βmax = βmax
        self.β = torch.linspace(βmin, βmax, n_steps)
        self.ɑ = 1 - self.β
        self.ᾱ = torch.cumprod(self.ɑ, dim=0)
        self.σ = self.β.sqrt()

    def before_batch(self, learn):
        x_0, _ = learn.batch
        learn.batch = self.noisify(x_0)

    @only
    def predict(self, learn):
        (x_t, t), _ = learn.batch
        learn.preds = learn.model(x_t, t).sample


DDPM.noisify = noisify
